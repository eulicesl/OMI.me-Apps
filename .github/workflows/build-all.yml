name: Build All Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-brain:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Brain image
        uses: docker/build-push-action@v5
        with:
          context: ./Brain
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/brain:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-friend:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Friend image
        uses: docker/build-push-action@v5
        with:
          context: ./Friend
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/friend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-jarvis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push Jarvis image
        uses: docker/build-push-action@v5
        with:
          context: ./Jarvis
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}/jarvis:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: [build-brain, build-friend, build-jarvis]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          body: |
            ## OMI Apps Release v${{ github.run_number }}
            
            Docker images built and pushed to GitHub Container Registry:
            - `ghcr.io/${{ github.repository }}/brain:latest`
            - `ghcr.io/${{ github.repository }}/friend:latest`
            - `ghcr.io/${{ github.repository }}/jarvis:latest`
            
            ## Quick Start with Docker Compose
            ```bash
            # Clone the repository
            git clone https://github.com/${{ github.repository }}.git
            cd OMI.me-Apps
            
            # Copy and configure environment variables
            cp docker.env.example .env
            # Edit .env with your configuration
            
            # Start all services
            docker-compose up -d
            ```
            
            ## Individual Service Access
            - Brain App: http://localhost:3000
            - Friend App: http://localhost:5000  
            - Jarvis App: http://localhost:8000
          draft: false
          prerelease: false 